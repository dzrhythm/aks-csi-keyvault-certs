# Before applying, be sure to make these updates:
# * Update the SecretProviderClass with your
#    - tenantId
#    - keyvaultName
# * Update the container image to match your ACR and image tag

apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: azure-kv-certs
spec:
  provider: azure
  parameters:
    tenantId: "[*** YOUR KEY VAULT TENANT ID ***]"  # the Azure Active Directory tenant ID of the KeyVault
    keyvaultName: "[*** YOUR KEY VAULT NAME ***]"   # the name of the KeyVault
    usePodIdentity: "false"
    useVMManagedIdentity: "false"
    userAssignedIdentityID: ""
    cloudName: ""
    cloudEnvFileName: ""
    objects:  |
      array:
        - |
          objectName: aks-https
          objectAlias: https.pfx
          objectType: secret        # object types: secret, key or cert
          objectFormat: pfx         # ensure PFX format
          objectEncoding: base64    # configure the provider to decode the base64 content so we get a binary PFX
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: azure-kv-aspnet-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: azure-kv-aspnet-pod
  template:
    metadata:
      labels:
        app: azure-kv-aspnet-pod
    spec:
      containers:
      - name: app
        image: "[*** YOUR ACR NAME ***].azurecr.io/aspnetapp-csi-keyvault"
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        env:
        - name: HTTPS_CERTIFICATE_PATH
          value: "/certs/https.pfx"
        volumeMounts:
        - name: azure-kv-aspnet-httpscert-vol
          mountPath: /certs
          readOnly: true
        resources:
          requests:
            memory: 512Mi
            cpu: 250m
          limits:
            memory: 1024Mi
            cpu: 500m
      volumes:
      - name: azure-kv-aspnet-httpscert-vol
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "azure-kv-certs"
          nodePublishSecretRef:
            name: kvcreds
---
apiVersion: v1
kind: Service
metadata:
  name: azure-kv-aspnet-svc
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: https
  selector:
    app: azure-kv-aspnet-pod
